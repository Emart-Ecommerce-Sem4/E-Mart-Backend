CREATE TABLE customer (
                       user_id VARCHAR(50) PRIMARY KEY,
                       first_name VARCHAR(255) NOT NULL, 
                       last_name VARCHAR(255) NOT NULL,
                       birthday DATE NOT NULL,
                       phone_number VARCHAR(20) NOT NULL,
                       address VARCHAR(255) NOT NULL,
                       
                       city VARCHAR(255) NOT NULL,
                       state state_type DEFAULT 'accepted' NOT NULL,
                      
                    FOREIGN KEY (user_id)
                        REFERENCES user_account (user_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE
);
CREATE TYPE user_type AS ENUM('customer', 'admin');
CREATE TYPE order_status_type AS ENUM('pending', 'admin');
CREATE TYPE state_type AS ENUM('accepted', 'declined'); 


CREATE TABLE  user_account (
    user_id VARCHAR(50) PRIMARY KEY ,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    user_role user_type
);
CREATE TABLE admin (
                       user_id VARCHAR(50) PRIMARY KEY,
                       first_name VARCHAR(255) NOT NULL, 
                       last_name VARCHAR(255) NOT NULL,
                       birthday DATE NOT NULL,
                       phone_number VARCHAR(20) NOT NULL,
                       address VARCHAR(255) NOT NULL,
                       email VARCHAR(255) NOT NULL,
                       
                       state state_type DEFAULT 'accepted' NOT NULL,
                      
                    FOREIGN KEY (user_id)
                        REFERENCES user_account (user_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE
);
CREATE TABLE  product (
    product_id VARCHAR(50) PRIMARY KEY ,
    name VARCHAR(50) NOT NULL,
    description VARCHAR(255) ,
    category_id VARCHAR(36) NOT NULL,
    quantity_in_stock INTEGER NOT NULL,
    unit_price DECIMAL(100, 2),
    variant_id VARCHAR(36) NOT NULL,
    FOREIGN KEY (category_id)
                        REFERENCES category (category_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE,
    FOREIGN KEY (variant_id)
                        REFERENCES variant (variant_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE
);
CREATE TABLE  category(
    category_id VARCHAR(50) PRIMARY KEY ,
    category_name VARCHAR(50) NOT NULL  
);
CREATE TABLE  variant(
    variant_id VARCHAR(50) PRIMARY KEY ,
    variant_type VARCHAR(50) NOT NULL  
);

CREATE TABLE product_review (
                       review_id VARCHAR(50) PRIMARY KEY,
                       user_id VARCHAR(50) NOT NULL, 
                       product_id VARCHAR(50) NOT NULL,
                       rating INTEGER NOT NULL,
                       
                       description VARCHAR(255) NOT NULL,
                       
                       
                       
                      
                    FOREIGN KEY (user_id)
                        REFERENCES user_account (user_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE,
                       
                    FOREIGN KEY (product_id)
                        REFERENCES product (product_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE
);

CREATE TABLE user_orders (
                       order_id VARCHAR(50) PRIMARY KEY,
                       user_id VARCHAR(50) NOT NULL, 
                       order_date DATE NOT NULL,
                       rating INTEGER,
                       rating_comment TEXT,
                       item_count INTEGER NOT NULL,
                       order_status VARCHAR(30) NOT NULL,
                       comments VARCHAR(255),
                       dispatched_date DATE,
                       payment_method VARCHAR(30) NOT NULL,
                       delivery_id VARCHAR(50),
                       total_price numeric(10,2),
                    FOREIGN KEY (user_id)
                        REFERENCES user_account (user_id)
                        ON DELETE CASCADE
                        ON UPDATE CASCADE,   
                    check (order_status in ('PLACED','CONFIRMED','SHIPPED','DELIVERED','CLOSED','REJECTED','REFUNDED','STORE_PICKUP')),
                    check (payment_method in ('CASH_ON_DELIVERY','CARD_PAYMENT','CASH_PAYMENT'))               
);

CREATE TABLE order_items (
                        order_id VARCHAR(50),
                        product_id VARCHAR(50),
                        item_count INTEGER,
                        total_price INTEGER,
                        FOREIGN KEY (product_id)
                            REFERENCES product (product_id)
                            ON DELETE CASCADE
                            ON UPDATE CASCADE,
                        FOREIGN KEY (order_id)
                            REFERENCES user_orders (order_id)
                            ON DELETE CASCADE
                            ON UPDATE CASCADE
);